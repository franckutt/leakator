services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - etl-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - etl-network

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin1
      MINIO_ROOT_PASSWORD: minioadmin1
    volumes:
      - ./minio/data:/data
      - ./minio/minio-init.sh:/minio-init.sh
    ports:
      - "9000:9000"
      - "9001:9001"
    entrypoint: ["/bin/sh", "/minio-init.sh"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - etl-network

  etl:
    build: ./etl
    container_name: etl
    depends_on:
      elasticsearch:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ROOT_USER=minioadmin1
      - MINIO_ROOT_PASSWORD=minioadmin1
      - ELASTIC_HOST=http://elasticsearch:9200
      - MINIO_BUCKET=data
      - DATA_OBJECT_NAME=clients_data.csv
      - INDEX_NAME=import_clients
    restart: on-failure
    networks:
      - etl-network

networks:
  etl-network:
    driver: bridge